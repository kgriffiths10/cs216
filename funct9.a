#/*# Start of file funct9.a */
#
#/*# MIPSMARK 1.0 1/5/98 Copyright 1998 J. Waldron. */
#
## Question:
##
## $a0 is the address of an array of integers (word)
## $a1 is the number of words in that array
##
## Write a function "countwords" that returns
## the SUM of words in an integer array $a0
## that return a non-zero value when passed to the
## "checknum" function. 
## Otherwise checknum returns 0.
## do not rely on the label "mynums" or the 
## particular implementation of "checkit"
## 

#/*# Output format must be:		*/
#/*# "sum of words that pass test = 13"		*/
#include <stdio.h>       /* for printf in C programs */
#include <stdlib.h>	 /* for exit() in C programs */


#/*##############################################
#					 	#
#		text segment			#
#						#
#################################################

	.text		
       	.globl __start 
__start:		# execution starts here  */


	la $a0,ans
	li $v0,4	# print out string
	syscall 
	
	la $a0,mynums
	lw $a1,len
	jal countwords	# call student's function

	move $a0,$v0
	li $v0,1	# print out returned value
	syscall 

	la $a0,endl	# system call to print
	li $v0,4	# out a newline
	syscall

	li $v0,10
	syscall		# auf Wiedersehen


#
# checknum is a function which takes a word
# in a0,  and returns either 0 or non-zero in v0,
# depending on the result of some test.
# Do not rely of the particular operation performed
# by checknum or the registers used.
# These will be different in other mipsmark cases.
#

checknum:
	slti $v0,$a0,42
        jr $ra

#/* Any changes above this line will be discarded by
# mipsmark. Put your answer between dashed lines. */
#/*-------------- start cut ----------------------- */

#/*  Student's Name: 	Account:		*/

countwords:
	
	move $s1, $a0 	# s1 is string address
	move $s7, $ra 	# s7 is next op
	sub $sp, $sp, 4

	sw $s0, ($sp) 	# push val to stack
	li $s5, 0 	# counter = 0
	li $s6, 0 	# sum = 0
	move $s2, $a1 	# length

loop:
	lw $s3, ($s1) 		# load string address into s3
	beq $s5, $s2, strEnd	# end of string
	move $a0, $s3 		# move char into a0
	jal checknum 		
	addi $s1, $s1, 4 	# next element
	addi $s5, $s5, 1
	beqz $v0, loop
	add $s6, $s6, $s3 	
	j loop


strEnd:
	move $v0, $s6 		# v0 = sum
	move $ra, $s7 		# s7 to next op
	lw $t0, ($sp) 		# pop val from stack
	add $sp, $sp, 4
	beqz $t0, ret 		
	
	# implemented similar strategy as done in a lab (funct7.a)
	# reseting the registers
	
	move $s0, $t0 
	move $s1, $t0
	move $s2, $t0
	move $s3, $t0
	move $s4, $t0
	move $s5, $t0
	move $s6, $t0
	move $s7, $t0

ret:
	jr $ra 		# return to main

#/*
	j __start	#nasty loop if mips program not exited */
#/*--------------  end cut  -----------------------
# Any changes below this line will be discarded by
# mipsmark. Put your answer between dashed lines.

#################################################
#                                               #
#               data segment                    #
#                                               #
#################################################

        .data			#*/
mynums:	.word	1, 2, 3, 67, 42, 55, 0, 7
len:	.word	8
ans:	.asciiz "sum of words that pass test = "
endl:	.asciiz "\n"
#
#/*# End of file funct9.a		*/
